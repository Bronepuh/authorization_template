version: "3.0"

services:
  server:
    depends_on:
      postgres:
        condition: service_started
    build:
      target: server
      context: ./src/
      dockerfile: local-dev.Dockerfile
    restart: always
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    volumes:
      - ./src/services/server/src/@common/migrations:/services/server/src/@common/migrations
      - ./src/services/server/src:/services/server/src
      - ./server-data/file-storage:/services/server/${STORAGE_PATH}
    environment:
      - NODE_ENV=development
      - PORT=${SERVER_PORT}
      - JWT_TOKEN_EXPIRES_IN=1000000

  postgres:
    image: postgres:12.2
    restart: always
    volumes:
      - ./server-data/postgres-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  client:
    depends_on:
      - server
    build:
      target: client
      context: ./src/
      dockerfile: local-dev.Dockerfile
    restart: always
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    volumes:
      - ./src/services/client/public:/services/client/public
      - ./src/services/client/src:/services/client/src
      - ./server-data/file-storage:/services/server/${STORAGE_PATH}
    environment:
      - NODE_ENV=development
      - REACT_APP_ENV=development
      - PORT=${CLIENT_PORT}
      - SERVER_BASEURL=server:${SERVER_PORT}
      - ADMINER_BASEURL=adminer:${ADMINER_PORT}
      - CHOKIDAR_USEPOLLING=true

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
